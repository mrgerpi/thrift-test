/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef ThriftTestKernalService_H
#define ThriftTestKernalService_H

#include <thrift/TDispatchProcessor.h>
#include "thrift_test_kernal_types.h"

namespace thrift_test_kernal {

class ThriftTestKernalServiceIf {
 public:
  virtual ~ThriftTestKernalServiceIf() {}
  virtual void GetServiceList(GetServiceListResponse& _return, const GetServiceListRequest& request) = 0;
  virtual void AddService(AddServiceResponse& _return, const AddServiceRequest& request) = 0;
  virtual void FillData(FillDataResponse& _return, const FillDataRequest& request) = 0;
  virtual void RequestTrigger(RequestTriggerReseponse& _return, const RequestTriggerRequest& request) = 0;
};

class ThriftTestKernalServiceIfFactory {
 public:
  typedef ThriftTestKernalServiceIf Handler;

  virtual ~ThriftTestKernalServiceIfFactory() {}

  virtual ThriftTestKernalServiceIf* getHandler(const ::apache::thrift::TConnectionInfo& connInfo) = 0;
  virtual void releaseHandler(ThriftTestKernalServiceIf* /* handler */) = 0;
};

class ThriftTestKernalServiceIfSingletonFactory : virtual public ThriftTestKernalServiceIfFactory {
 public:
  ThriftTestKernalServiceIfSingletonFactory(const boost::shared_ptr<ThriftTestKernalServiceIf>& iface) : iface_(iface) {}
  virtual ~ThriftTestKernalServiceIfSingletonFactory() {}

  virtual ThriftTestKernalServiceIf* getHandler(const ::apache::thrift::TConnectionInfo&) {
    return iface_.get();
  }
  virtual void releaseHandler(ThriftTestKernalServiceIf* /* handler */) {}

 protected:
  boost::shared_ptr<ThriftTestKernalServiceIf> iface_;
};

class ThriftTestKernalServiceNull : virtual public ThriftTestKernalServiceIf {
 public:
  virtual ~ThriftTestKernalServiceNull() {}
  void GetServiceList(GetServiceListResponse& /* _return */, const GetServiceListRequest& /* request */) {
    return;
  }
  void AddService(AddServiceResponse& /* _return */, const AddServiceRequest& /* request */) {
    return;
  }
  void FillData(FillDataResponse& /* _return */, const FillDataRequest& /* request */) {
    return;
  }
  void RequestTrigger(RequestTriggerReseponse& /* _return */, const RequestTriggerRequest& /* request */) {
    return;
  }
};

typedef struct _ThriftTestKernalService_GetServiceList_args__isset {
  _ThriftTestKernalService_GetServiceList_args__isset() : request(false) {}
  bool request :1;
} _ThriftTestKernalService_GetServiceList_args__isset;

class ThriftTestKernalService_GetServiceList_args {
 public:

  static const char* ascii_fingerprint; // = "448EBD233DB60CDC7A5210FF16C995EA";
  static const uint8_t binary_fingerprint[16]; // = {0x44,0x8E,0xBD,0x23,0x3D,0xB6,0x0C,0xDC,0x7A,0x52,0x10,0xFF,0x16,0xC9,0x95,0xEA};

  ThriftTestKernalService_GetServiceList_args(const ThriftTestKernalService_GetServiceList_args&);
  ThriftTestKernalService_GetServiceList_args& operator=(const ThriftTestKernalService_GetServiceList_args&);
  ThriftTestKernalService_GetServiceList_args() {
  }

  virtual ~ThriftTestKernalService_GetServiceList_args() throw();
  GetServiceListRequest request;

  _ThriftTestKernalService_GetServiceList_args__isset __isset;

  void __set_request(const GetServiceListRequest& val);

  bool operator == (const ThriftTestKernalService_GetServiceList_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const ThriftTestKernalService_GetServiceList_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftTestKernalService_GetServiceList_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_GetServiceList_args& obj);
};


class ThriftTestKernalService_GetServiceList_pargs {
 public:

  static const char* ascii_fingerprint; // = "448EBD233DB60CDC7A5210FF16C995EA";
  static const uint8_t binary_fingerprint[16]; // = {0x44,0x8E,0xBD,0x23,0x3D,0xB6,0x0C,0xDC,0x7A,0x52,0x10,0xFF,0x16,0xC9,0x95,0xEA};


  virtual ~ThriftTestKernalService_GetServiceList_pargs() throw();
  const GetServiceListRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_GetServiceList_pargs& obj);
};

typedef struct _ThriftTestKernalService_GetServiceList_result__isset {
  _ThriftTestKernalService_GetServiceList_result__isset() : success(false) {}
  bool success :1;
} _ThriftTestKernalService_GetServiceList_result__isset;

class ThriftTestKernalService_GetServiceList_result {
 public:

  static const char* ascii_fingerprint; // = "268D56BDDCB3DE5BAD13EECE8D83A306";
  static const uint8_t binary_fingerprint[16]; // = {0x26,0x8D,0x56,0xBD,0xDC,0xB3,0xDE,0x5B,0xAD,0x13,0xEE,0xCE,0x8D,0x83,0xA3,0x06};

  ThriftTestKernalService_GetServiceList_result(const ThriftTestKernalService_GetServiceList_result&);
  ThriftTestKernalService_GetServiceList_result& operator=(const ThriftTestKernalService_GetServiceList_result&);
  ThriftTestKernalService_GetServiceList_result() {
  }

  virtual ~ThriftTestKernalService_GetServiceList_result() throw();
  GetServiceListResponse success;

  _ThriftTestKernalService_GetServiceList_result__isset __isset;

  void __set_success(const GetServiceListResponse& val);

  bool operator == (const ThriftTestKernalService_GetServiceList_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const ThriftTestKernalService_GetServiceList_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftTestKernalService_GetServiceList_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_GetServiceList_result& obj);
};

typedef struct _ThriftTestKernalService_GetServiceList_presult__isset {
  _ThriftTestKernalService_GetServiceList_presult__isset() : success(false) {}
  bool success :1;
} _ThriftTestKernalService_GetServiceList_presult__isset;

class ThriftTestKernalService_GetServiceList_presult {
 public:

  static const char* ascii_fingerprint; // = "268D56BDDCB3DE5BAD13EECE8D83A306";
  static const uint8_t binary_fingerprint[16]; // = {0x26,0x8D,0x56,0xBD,0xDC,0xB3,0xDE,0x5B,0xAD,0x13,0xEE,0xCE,0x8D,0x83,0xA3,0x06};


  virtual ~ThriftTestKernalService_GetServiceList_presult() throw();
  GetServiceListResponse* success;

  _ThriftTestKernalService_GetServiceList_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_GetServiceList_presult& obj);
};

typedef struct _ThriftTestKernalService_AddService_args__isset {
  _ThriftTestKernalService_AddService_args__isset() : request(false) {}
  bool request :1;
} _ThriftTestKernalService_AddService_args__isset;

class ThriftTestKernalService_AddService_args {
 public:

  static const char* ascii_fingerprint; // = "027764DBC063BF242AF21B83283A4C22";
  static const uint8_t binary_fingerprint[16]; // = {0x02,0x77,0x64,0xDB,0xC0,0x63,0xBF,0x24,0x2A,0xF2,0x1B,0x83,0x28,0x3A,0x4C,0x22};

  ThriftTestKernalService_AddService_args(const ThriftTestKernalService_AddService_args&);
  ThriftTestKernalService_AddService_args& operator=(const ThriftTestKernalService_AddService_args&);
  ThriftTestKernalService_AddService_args() {
  }

  virtual ~ThriftTestKernalService_AddService_args() throw();
  AddServiceRequest request;

  _ThriftTestKernalService_AddService_args__isset __isset;

  void __set_request(const AddServiceRequest& val);

  bool operator == (const ThriftTestKernalService_AddService_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const ThriftTestKernalService_AddService_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftTestKernalService_AddService_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_AddService_args& obj);
};


class ThriftTestKernalService_AddService_pargs {
 public:

  static const char* ascii_fingerprint; // = "027764DBC063BF242AF21B83283A4C22";
  static const uint8_t binary_fingerprint[16]; // = {0x02,0x77,0x64,0xDB,0xC0,0x63,0xBF,0x24,0x2A,0xF2,0x1B,0x83,0x28,0x3A,0x4C,0x22};


  virtual ~ThriftTestKernalService_AddService_pargs() throw();
  const AddServiceRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_AddService_pargs& obj);
};

typedef struct _ThriftTestKernalService_AddService_result__isset {
  _ThriftTestKernalService_AddService_result__isset() : success(false) {}
  bool success :1;
} _ThriftTestKernalService_AddService_result__isset;

class ThriftTestKernalService_AddService_result {
 public:

  static const char* ascii_fingerprint; // = "AE16B3B80C3AE2A38B3A45447ED828F6";
  static const uint8_t binary_fingerprint[16]; // = {0xAE,0x16,0xB3,0xB8,0x0C,0x3A,0xE2,0xA3,0x8B,0x3A,0x45,0x44,0x7E,0xD8,0x28,0xF6};

  ThriftTestKernalService_AddService_result(const ThriftTestKernalService_AddService_result&);
  ThriftTestKernalService_AddService_result& operator=(const ThriftTestKernalService_AddService_result&);
  ThriftTestKernalService_AddService_result() {
  }

  virtual ~ThriftTestKernalService_AddService_result() throw();
  AddServiceResponse success;

  _ThriftTestKernalService_AddService_result__isset __isset;

  void __set_success(const AddServiceResponse& val);

  bool operator == (const ThriftTestKernalService_AddService_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const ThriftTestKernalService_AddService_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftTestKernalService_AddService_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_AddService_result& obj);
};

typedef struct _ThriftTestKernalService_AddService_presult__isset {
  _ThriftTestKernalService_AddService_presult__isset() : success(false) {}
  bool success :1;
} _ThriftTestKernalService_AddService_presult__isset;

class ThriftTestKernalService_AddService_presult {
 public:

  static const char* ascii_fingerprint; // = "AE16B3B80C3AE2A38B3A45447ED828F6";
  static const uint8_t binary_fingerprint[16]; // = {0xAE,0x16,0xB3,0xB8,0x0C,0x3A,0xE2,0xA3,0x8B,0x3A,0x45,0x44,0x7E,0xD8,0x28,0xF6};


  virtual ~ThriftTestKernalService_AddService_presult() throw();
  AddServiceResponse* success;

  _ThriftTestKernalService_AddService_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_AddService_presult& obj);
};

typedef struct _ThriftTestKernalService_FillData_args__isset {
  _ThriftTestKernalService_FillData_args__isset() : request(false) {}
  bool request :1;
} _ThriftTestKernalService_FillData_args__isset;

class ThriftTestKernalService_FillData_args {
 public:

  static const char* ascii_fingerprint; // = "027764DBC063BF242AF21B83283A4C22";
  static const uint8_t binary_fingerprint[16]; // = {0x02,0x77,0x64,0xDB,0xC0,0x63,0xBF,0x24,0x2A,0xF2,0x1B,0x83,0x28,0x3A,0x4C,0x22};

  ThriftTestKernalService_FillData_args(const ThriftTestKernalService_FillData_args&);
  ThriftTestKernalService_FillData_args& operator=(const ThriftTestKernalService_FillData_args&);
  ThriftTestKernalService_FillData_args() {
  }

  virtual ~ThriftTestKernalService_FillData_args() throw();
  FillDataRequest request;

  _ThriftTestKernalService_FillData_args__isset __isset;

  void __set_request(const FillDataRequest& val);

  bool operator == (const ThriftTestKernalService_FillData_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const ThriftTestKernalService_FillData_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftTestKernalService_FillData_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_FillData_args& obj);
};


class ThriftTestKernalService_FillData_pargs {
 public:

  static const char* ascii_fingerprint; // = "027764DBC063BF242AF21B83283A4C22";
  static const uint8_t binary_fingerprint[16]; // = {0x02,0x77,0x64,0xDB,0xC0,0x63,0xBF,0x24,0x2A,0xF2,0x1B,0x83,0x28,0x3A,0x4C,0x22};


  virtual ~ThriftTestKernalService_FillData_pargs() throw();
  const FillDataRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_FillData_pargs& obj);
};

typedef struct _ThriftTestKernalService_FillData_result__isset {
  _ThriftTestKernalService_FillData_result__isset() : success(false) {}
  bool success :1;
} _ThriftTestKernalService_FillData_result__isset;

class ThriftTestKernalService_FillData_result {
 public:

  static const char* ascii_fingerprint; // = "AE16B3B80C3AE2A38B3A45447ED828F6";
  static const uint8_t binary_fingerprint[16]; // = {0xAE,0x16,0xB3,0xB8,0x0C,0x3A,0xE2,0xA3,0x8B,0x3A,0x45,0x44,0x7E,0xD8,0x28,0xF6};

  ThriftTestKernalService_FillData_result(const ThriftTestKernalService_FillData_result&);
  ThriftTestKernalService_FillData_result& operator=(const ThriftTestKernalService_FillData_result&);
  ThriftTestKernalService_FillData_result() {
  }

  virtual ~ThriftTestKernalService_FillData_result() throw();
  FillDataResponse success;

  _ThriftTestKernalService_FillData_result__isset __isset;

  void __set_success(const FillDataResponse& val);

  bool operator == (const ThriftTestKernalService_FillData_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const ThriftTestKernalService_FillData_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftTestKernalService_FillData_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_FillData_result& obj);
};

typedef struct _ThriftTestKernalService_FillData_presult__isset {
  _ThriftTestKernalService_FillData_presult__isset() : success(false) {}
  bool success :1;
} _ThriftTestKernalService_FillData_presult__isset;

class ThriftTestKernalService_FillData_presult {
 public:

  static const char* ascii_fingerprint; // = "AE16B3B80C3AE2A38B3A45447ED828F6";
  static const uint8_t binary_fingerprint[16]; // = {0xAE,0x16,0xB3,0xB8,0x0C,0x3A,0xE2,0xA3,0x8B,0x3A,0x45,0x44,0x7E,0xD8,0x28,0xF6};


  virtual ~ThriftTestKernalService_FillData_presult() throw();
  FillDataResponse* success;

  _ThriftTestKernalService_FillData_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_FillData_presult& obj);
};

typedef struct _ThriftTestKernalService_RequestTrigger_args__isset {
  _ThriftTestKernalService_RequestTrigger_args__isset() : request(false) {}
  bool request :1;
} _ThriftTestKernalService_RequestTrigger_args__isset;

class ThriftTestKernalService_RequestTrigger_args {
 public:

  static const char* ascii_fingerprint; // = "A756D3DBE614FB13F70BF7F7B6EB3D73";
  static const uint8_t binary_fingerprint[16]; // = {0xA7,0x56,0xD3,0xDB,0xE6,0x14,0xFB,0x13,0xF7,0x0B,0xF7,0xF7,0xB6,0xEB,0x3D,0x73};

  ThriftTestKernalService_RequestTrigger_args(const ThriftTestKernalService_RequestTrigger_args&);
  ThriftTestKernalService_RequestTrigger_args& operator=(const ThriftTestKernalService_RequestTrigger_args&);
  ThriftTestKernalService_RequestTrigger_args() {
  }

  virtual ~ThriftTestKernalService_RequestTrigger_args() throw();
  RequestTriggerRequest request;

  _ThriftTestKernalService_RequestTrigger_args__isset __isset;

  void __set_request(const RequestTriggerRequest& val);

  bool operator == (const ThriftTestKernalService_RequestTrigger_args & rhs) const
  {
    if (!(request == rhs.request))
      return false;
    return true;
  }
  bool operator != (const ThriftTestKernalService_RequestTrigger_args &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftTestKernalService_RequestTrigger_args & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_RequestTrigger_args& obj);
};


class ThriftTestKernalService_RequestTrigger_pargs {
 public:

  static const char* ascii_fingerprint; // = "A756D3DBE614FB13F70BF7F7B6EB3D73";
  static const uint8_t binary_fingerprint[16]; // = {0xA7,0x56,0xD3,0xDB,0xE6,0x14,0xFB,0x13,0xF7,0x0B,0xF7,0xF7,0xB6,0xEB,0x3D,0x73};


  virtual ~ThriftTestKernalService_RequestTrigger_pargs() throw();
  const RequestTriggerRequest* request;

  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_RequestTrigger_pargs& obj);
};

typedef struct _ThriftTestKernalService_RequestTrigger_result__isset {
  _ThriftTestKernalService_RequestTrigger_result__isset() : success(false) {}
  bool success :1;
} _ThriftTestKernalService_RequestTrigger_result__isset;

class ThriftTestKernalService_RequestTrigger_result {
 public:

  static const char* ascii_fingerprint; // = "0B00C6A32956D0FB910392C197F6E622";
  static const uint8_t binary_fingerprint[16]; // = {0x0B,0x00,0xC6,0xA3,0x29,0x56,0xD0,0xFB,0x91,0x03,0x92,0xC1,0x97,0xF6,0xE6,0x22};

  ThriftTestKernalService_RequestTrigger_result(const ThriftTestKernalService_RequestTrigger_result&);
  ThriftTestKernalService_RequestTrigger_result& operator=(const ThriftTestKernalService_RequestTrigger_result&);
  ThriftTestKernalService_RequestTrigger_result() {
  }

  virtual ~ThriftTestKernalService_RequestTrigger_result() throw();
  RequestTriggerReseponse success;

  _ThriftTestKernalService_RequestTrigger_result__isset __isset;

  void __set_success(const RequestTriggerReseponse& val);

  bool operator == (const ThriftTestKernalService_RequestTrigger_result & rhs) const
  {
    if (!(success == rhs.success))
      return false;
    return true;
  }
  bool operator != (const ThriftTestKernalService_RequestTrigger_result &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftTestKernalService_RequestTrigger_result & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_RequestTrigger_result& obj);
};

typedef struct _ThriftTestKernalService_RequestTrigger_presult__isset {
  _ThriftTestKernalService_RequestTrigger_presult__isset() : success(false) {}
  bool success :1;
} _ThriftTestKernalService_RequestTrigger_presult__isset;

class ThriftTestKernalService_RequestTrigger_presult {
 public:

  static const char* ascii_fingerprint; // = "0B00C6A32956D0FB910392C197F6E622";
  static const uint8_t binary_fingerprint[16]; // = {0x0B,0x00,0xC6,0xA3,0x29,0x56,0xD0,0xFB,0x91,0x03,0x92,0xC1,0x97,0xF6,0xE6,0x22};


  virtual ~ThriftTestKernalService_RequestTrigger_presult() throw();
  RequestTriggerReseponse* success;

  _ThriftTestKernalService_RequestTrigger_presult__isset __isset;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);

  friend std::ostream& operator<<(std::ostream& out, const ThriftTestKernalService_RequestTrigger_presult& obj);
};

class ThriftTestKernalServiceClient : virtual public ThriftTestKernalServiceIf {
 public:
  ThriftTestKernalServiceClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
    setProtocol(prot);
  }
  ThriftTestKernalServiceClient(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    setProtocol(iprot,oprot);
  }
 private:
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> prot) {
  setProtocol(prot,prot);
  }
  void setProtocol(boost::shared_ptr< ::apache::thrift::protocol::TProtocol> iprot, boost::shared_ptr< ::apache::thrift::protocol::TProtocol> oprot) {
    piprot_=iprot;
    poprot_=oprot;
    iprot_ = iprot.get();
    oprot_ = oprot.get();
  }
 public:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getInputProtocol() {
    return piprot_;
  }
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> getOutputProtocol() {
    return poprot_;
  }
  void GetServiceList(GetServiceListResponse& _return, const GetServiceListRequest& request);
  void send_GetServiceList(const GetServiceListRequest& request);
  void recv_GetServiceList(GetServiceListResponse& _return);
  void AddService(AddServiceResponse& _return, const AddServiceRequest& request);
  void send_AddService(const AddServiceRequest& request);
  void recv_AddService(AddServiceResponse& _return);
  void FillData(FillDataResponse& _return, const FillDataRequest& request);
  void send_FillData(const FillDataRequest& request);
  void recv_FillData(FillDataResponse& _return);
  void RequestTrigger(RequestTriggerReseponse& _return, const RequestTriggerRequest& request);
  void send_RequestTrigger(const RequestTriggerRequest& request);
  void recv_RequestTrigger(RequestTriggerReseponse& _return);
 protected:
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> piprot_;
  boost::shared_ptr< ::apache::thrift::protocol::TProtocol> poprot_;
  ::apache::thrift::protocol::TProtocol* iprot_;
  ::apache::thrift::protocol::TProtocol* oprot_;
};

class ThriftTestKernalServiceProcessor : public ::apache::thrift::TDispatchProcessor {
 protected:
  boost::shared_ptr<ThriftTestKernalServiceIf> iface_;
  virtual bool dispatchCall(::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, const std::string& fname, int32_t seqid, void* callContext);
 private:
  typedef  void (ThriftTestKernalServiceProcessor::*ProcessFunction)(int32_t, ::apache::thrift::protocol::TProtocol*, ::apache::thrift::protocol::TProtocol*, void*);
  typedef std::map<std::string, ProcessFunction> ProcessMap;
  ProcessMap processMap_;
  void process_GetServiceList(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_AddService(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_FillData(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
  void process_RequestTrigger(int32_t seqid, ::apache::thrift::protocol::TProtocol* iprot, ::apache::thrift::protocol::TProtocol* oprot, void* callContext);
 public:
  ThriftTestKernalServiceProcessor(boost::shared_ptr<ThriftTestKernalServiceIf> iface) :
    iface_(iface) {
    processMap_["GetServiceList"] = &ThriftTestKernalServiceProcessor::process_GetServiceList;
    processMap_["AddService"] = &ThriftTestKernalServiceProcessor::process_AddService;
    processMap_["FillData"] = &ThriftTestKernalServiceProcessor::process_FillData;
    processMap_["RequestTrigger"] = &ThriftTestKernalServiceProcessor::process_RequestTrigger;
  }

  virtual ~ThriftTestKernalServiceProcessor() {}
};

class ThriftTestKernalServiceProcessorFactory : public ::apache::thrift::TProcessorFactory {
 public:
  ThriftTestKernalServiceProcessorFactory(const ::boost::shared_ptr< ThriftTestKernalServiceIfFactory >& handlerFactory) :
      handlerFactory_(handlerFactory) {}

  ::boost::shared_ptr< ::apache::thrift::TProcessor > getProcessor(const ::apache::thrift::TConnectionInfo& connInfo);

 protected:
  ::boost::shared_ptr< ThriftTestKernalServiceIfFactory > handlerFactory_;
};

class ThriftTestKernalServiceMultiface : virtual public ThriftTestKernalServiceIf {
 public:
  ThriftTestKernalServiceMultiface(std::vector<boost::shared_ptr<ThriftTestKernalServiceIf> >& ifaces) : ifaces_(ifaces) {
  }
  virtual ~ThriftTestKernalServiceMultiface() {}
 protected:
  std::vector<boost::shared_ptr<ThriftTestKernalServiceIf> > ifaces_;
  ThriftTestKernalServiceMultiface() {}
  void add(boost::shared_ptr<ThriftTestKernalServiceIf> iface) {
    ifaces_.push_back(iface);
  }
 public:
  void GetServiceList(GetServiceListResponse& _return, const GetServiceListRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->GetServiceList(_return, request);
    }
    ifaces_[i]->GetServiceList(_return, request);
    return;
  }

  void AddService(AddServiceResponse& _return, const AddServiceRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->AddService(_return, request);
    }
    ifaces_[i]->AddService(_return, request);
    return;
  }

  void FillData(FillDataResponse& _return, const FillDataRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->FillData(_return, request);
    }
    ifaces_[i]->FillData(_return, request);
    return;
  }

  void RequestTrigger(RequestTriggerReseponse& _return, const RequestTriggerRequest& request) {
    size_t sz = ifaces_.size();
    size_t i = 0;
    for (; i < (sz - 1); ++i) {
      ifaces_[i]->RequestTrigger(_return, request);
    }
    ifaces_[i]->RequestTrigger(_return, request);
    return;
  }

};

} // namespace

#endif
